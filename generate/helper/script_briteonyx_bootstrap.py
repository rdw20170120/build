import script_bash
import script_briteonyx

from throw_out_your_templates_3_core_visitor_map import VisitorMap


class Script(script_briteonyx.Script):
    def __init__(self):
        script_briteonyx.Script.__init__(self)

    def generate(self):
        self.add_source_header()
        self.note("By convention, BriteOnyx is configured via environment variables prefixed by 'BO_'.")
        self.line()
        self.text('''boVariableRequire 'BO_Project' ||''')
        self.text(' boFailed "$0" "$LINENO" $? ||')
        self.line(' return $?')
        self.line()
        self.rule()
        self.comment('Copy starter files into place as necessary')
        self.line()
        self.line('DirSrc=$BO_Project/BriteOnyx/starter')
        self.line('DirTgt=$BO_Project')
        self.line()
        self.text('[[ ! -f $DirTgt/.hgignore ]] &&')
        self.line(' cp $DirSrc/project.hgignore $DirTgt/sample.hgignore')
        self.line()
        self.line('FileTgt=$DirTgt/declare.src')
        self.text('[[ ! -f $FileTgt ]] &&')
        self.line(' cp $DirSrc/project-declare.src $FileTgt')
        self.line()
        self.line('FileTgt=$DirTgt/development.rst')
        self.text('[[ ! -f $FileTgt ]] &&')
        self.line(' cp $DirSrc/project-development.rst $FileTgt')
        self.line()
        self.line('FileTgt=$DirTgt/env.src')
        self.text('[[ ! -f $FileTgt ]] &&')
        self.line(' cp $DirSrc/project-env.src $FileTgt')
        self.line()
        self.line('FileTgt=$DirTgt/README.rst')
        self.text('[[ ! -f $FileTgt ]] &&')
        self.line(' cp $DirSrc/project-README.rst $FileTgt')
        self.line()
        self.line('DirTgt=$BO_Project/bin')
        self.line('FileTgt=$DirTgt/all-fix-permissions.bash')
        self.text('[[ ! -f $FileTgt ]] &&')
        self.line(' cp $DirSrc/project-all-fix-permissions.bash $FileTgt')
        self.line()
        self.line('DirTgt=$BO_Project/bin/helper/Linux')
        self.text('[[ ! -e $DirTgt ]] &&')
        self.line(' mkdir -p $DirTgt')
        self.line('FileTgt=$DirTgt/declare-BASH.src')
        self.text('[[ ! -f $FileTgt ]] &&')
        self.line(' cp $DirSrc/project-declare-BASH.src $FileTgt')
        self.line()
        self.line('DirTgt=$HOME')
        self.line('FileTgt=$DirTgt/.BriteOnyx.src')
        self.comment('Move previous scripts to new path')
        self.text('[[   -f $DirTgt/BriteOnyx-env.bash ]] &&')
        self.line(' mv $DirTgt/BriteOnyx-env.bash $FileTgt')
        self.text('[[   -f $DirTgt/BriteOnyx-env.src  ]] &&')
        self.line(' mv $DirTgt/BriteOnyx-env.src  $FileTgt')
        self.text('[[ ! -f $FileTgt ]] &&')
        self.line(' cp $DirSrc/user-BriteOnyx.src $FileTgt')
        self.line()
        self.rule()
        self.comment('Configure for this user')
        self.line()
        self.line('Script=$HOME/.BriteOnyx.src')
        self.text('boScriptRequire "$Script" ||')
        self.text(' boFailed "$0" "$LINENO" $? ||')
        self.line(' return $?')
        self.text('source          "$Script" ||')
        self.text(' boFailed "$0" "$LINENO" $? ||')
        self.line(' return $?')
        self.line()
        self.rule()
        self.comment('Configure for this project')
        self.line()
        self.line('Script=$BO_Project/env.src')
        self.text('boScriptRequire $Script ||')
        self.text(' boFailed "$0" "$LINENO" $? ||')
        self.line(' return $?')
        self.text('source          $Script ||')
        self.text(' boFailed "$0" "$LINENO" $? ||')
        self.line(' return $?')
        self.line()
        self.rule()
        self.comment('Configure for BriteOnyx')
        self.line()
        self.line('Script="$BO_Project/BriteOnyx/env.src"')
        self.text('boScriptRequire "$Script" ||')
        self.text(' boFailed "$0" "$LINENO" $? ||')
        self.line(' return $?')
        self.text('source          "$Script" ||')
        self.text(' boFailed "$0" "$LINENO" $? ||')
        self.line(' return $?')
        self.line()
        self.rule()
        self.comment('Verify BriteOnyx bootstrap configuration')
        self.line()
        self.text('''boVariableRequire 'BO_Parent'  ||''')
        self.text(' boFailed "$0" "$LINENO" $? ||')
        self.line(' return $?')
        self.text('''boVariableRequire 'BO_Url'     ||''')
        self.text(' boFailed "$0" "$LINENO" $? ||')
        self.line(' return $?')
        self.text('''boVariableRequire 'BO_Version' ||''')
        self.text(' boFailed "$0" "$LINENO" $? ||')
        self.line(' return $?')
        self.line()
        self.rule()
        self.line(": <<'DisabledContent'")
        self.comment('Checkout the BriteOnyx source')
        self.line()
        self.text('boDirectoryCreate "$BO_Parent" ||')
        self.text(' boFailed "$0" "$LINENO" $? ||')
        self.line(' return $?')
        self.line()
        self.text('[[ -z "$BO_Home" ]] &&')
        self.line(''' export BO_Home=$(boNodeCanonical "$BO_Parent/$BO_Version")''')
        self.text('''boVariableRequire 'BO_Home' ||''')
        self.text(' boFailed "$0" "$LINENO" $? ||')
        self.line(' return $?')
        self.line()
        self.text('if boDirectoryExists "$BO_Home" ;')
        self.line(' then')
        self.line('''  boLogDebug "Directory '$BO_Home' already exists, skipping Mercurial clone."''')
        self.text('elif [[ "$BO_Version" == "predeployed" ]];')
        self.line(' then')
        self.line('''  boLogWarn "Ignoring Mercurial clone of version '$BO_Version'"''')
        self.line('else')
        self.line('''  boLogInfo "Cloning version '$BO_Version' from '$BO_Url' into '$BO_Home'..."''')
        self.line('  Cmd="hg clone"')
        self.line('  Cmd+=" --rev $BO_Version"')
        self.line('  Cmd+=" $BO_Url"')
        self.line('  Cmd+=" $BO_Home"')
        self.line('''  Msg="Mercurial failed to clone into directory '$BO_Home'!"''')
        self.text('  boExecute "$Cmd" "$Msg" ||')
        self.text(' boFailed "$0" "$LINENO" $? ||')
        self.line(' return $?')
        self.line('fi')
        self.line()
        self.text('boDirectoryRequire "$BO_Home" ||')
        self.text(' boFailed "$0" "$LINENO" $? ||')
        self.line(' return $?')
        self.line()
        self.text('if [[ "$BO_Version" == "tip" ]];')
        self.line(' then')
        self.line("  # Update Mercurial clone of 'tip' to support development of BriteOnyx framework")
        self.line('''  boLogInfo "Updating clone of version '$BO_Version' from '$BO_Url' into '$BO_Home'..."''')
        self.text('  cd "$BO_Home" ||')
        self.text(' boFailed "$0" "$LINENO" $? ||')
        self.line(' return $?')
        self.line('  Cmd="hg pull --update"')
        self.line('''  Msg="Mercurial failed to update clone in directory '$BO_Home'!"''')
        self.text('  boExecute "$Cmd" "$Msg" ||')
        self.text(' boFailed "$0" "$LINENO" $? ||')
        self.line(' return $?')
        self.line('else')
        self.line('''  boLogDebug "BriteOnyx version '$BO_Version' should be stable, skipping update of clone."''')
        self.line('fi')
        self.line('DisabledContent')
        self.add_disabled_content_footer()


VISITOR_MAP = VisitorMap(parent_map=script_bash.VISITOR_MAP)


def build():
    script = Script()
    script.generate()
    return script
    
def render(target_directory, target_file):
    script_bash.render(build(), VISITOR_MAP, target_directory, target_file)


""" Disabled content
"""

