import script_bash
import script_briteonyx

from throw_out_your_templates_3_core_visitor_map import VisitorMap

from structure_bash import *
from structure_briteonyx import *


class Script(script_briteonyx.Script):
    def __init__(self):
        script_briteonyx.Script.__init__(self)

    def generate(self):
        self.add(source_header())
        self.add(note("By convention, BriteOnyx is configured via environment variables prefixed by 'BO_'."))
        self.add(line())
        self.add('''boVariableRequire 'BO_Project' ||''')
        self.add(' boFailed "$0" "$LINENO" $? ||')
        self.add(line(' return $?'))
        self.add(line())
        self.add(rule())
        self.add(comment('Copy starter files into place as necessary'))
        self.add(line())
        self.add(line('DirSrc=$BO_Project/BriteOnyx/starter'))
        self.add(line('DirTgt=$BO_Project'))
        self.add(line())
        self.add('[[ ! -f $DirTgt/.hgignore ]] &&')
        self.add(line(' cp $DirSrc/project.hgignore $DirTgt/sample.hgignore'))
        self.add(line())
        self.add(line('FileTgt=$DirTgt/declare.src'))
        self.add('[[ ! -f $FileTgt ]] &&')
        self.add(line(' cp $DirSrc/project-declare.src $FileTgt'))
        self.add(line())
        self.add(line('FileTgt=$DirTgt/development.rst'))
        self.add('[[ ! -f $FileTgt ]] &&')
        self.add(line(' cp $DirSrc/project-development.rst $FileTgt'))
        self.add(line())
        self.add(line('FileTgt=$DirTgt/env.src'))
        self.add('[[ ! -f $FileTgt ]] &&')
        self.add(line(' cp $DirSrc/project-env.src $FileTgt'))
        self.add(line())
        self.add(line('FileTgt=$DirTgt/README.rst'))
        self.add('[[ ! -f $FileTgt ]] &&')
        self.add(line(' cp $DirSrc/project-README.rst $FileTgt'))
        self.add(line())
        self.add(line('DirTgt=$BO_Project/bin'))
        self.add(line('FileTgt=$DirTgt/all-fix-permissions.bash'))
        self.add('[[ ! -f $FileTgt ]] &&')
        self.add(line(' cp $DirSrc/project-all-fix-permissions.bash $FileTgt'))
        self.add(line())
        self.add(line('DirTgt=$BO_Project/bin/helper/Linux'))
        self.add('[[ ! -e $DirTgt ]] &&')
        self.add(line(' mkdir -p $DirTgt'))
        self.add(line('FileTgt=$DirTgt/declare-BASH.src'))
        self.add('[[ ! -f $FileTgt ]] &&')
        self.add(line(' cp $DirSrc/project-declare-BASH.src $FileTgt'))
        self.add(line())
        self.add(line('DirTgt=$HOME'))
        self.add(line('FileTgt=$DirTgt/.BriteOnyx.src'))
        self.add(comment('Move previous scripts to new path'))
        self.add('[[   -f $DirTgt/BriteOnyx-env.bash ]] &&')
        self.add(line(' mv $DirTgt/BriteOnyx-env.bash $FileTgt'))
        self.add('[[   -f $DirTgt/BriteOnyx-env.src  ]] &&')
        self.add(line(' mv $DirTgt/BriteOnyx-env.src  $FileTgt'))
        self.add('[[ ! -f $FileTgt ]] &&')
        self.add(line(' cp $DirSrc/user-BriteOnyx.src $FileTgt'))
        self.add(line())
        self.add(rule())
        self.add(comment('Configure for this user'))
        self.add(line())
        self.add(line('Script=$HOME/.BriteOnyx.src'))
        self.add('boScriptRequire "$Script" ||')
        self.add(' boFailed "$0" "$LINENO" $? ||')
        self.add(line(' return $?'))
        self.add('source          "$Script" ||')
        self.add(' boFailed "$0" "$LINENO" $? ||')
        self.add(line(' return $?'))
        self.add(line())
        self.add(rule())
        self.add(comment('Configure for this project'))
        self.add(line())
        self.add(line('Script=$BO_Project/env.src'))
        self.add('boScriptRequire $Script ||')
        self.add(' boFailed "$0" "$LINENO" $? ||')
        self.add(line(' return $?'))
        self.add('source          $Script ||')
        self.add(' boFailed "$0" "$LINENO" $? ||')
        self.add(line(' return $?'))
        self.add(line())
        self.add(rule())
        self.add(comment('Configure for BriteOnyx'))
        self.add(line())
        self.add(line('Script="$BO_Project/BriteOnyx/env.src"'))
        self.add('boScriptRequire "$Script" ||')
        self.add(' boFailed "$0" "$LINENO" $? ||')
        self.add(line(' return $?'))
        self.add('source          "$Script" ||')
        self.add(' boFailed "$0" "$LINENO" $? ||')
        self.add(line(' return $?'))
        self.add(line())
        self.add(rule())
        self.add(comment('Verify BriteOnyx bootstrap configuration'))
        self.add(line())
        self.add('''boVariableRequire 'BO_Parent'  ||''')
        self.add(' boFailed "$0" "$LINENO" $? ||')
        self.add(line(' return $?'))
        self.add('''boVariableRequire 'BO_Url'     ||''')
        self.add(' boFailed "$0" "$LINENO" $? ||')
        self.add(line(' return $?'))
        self.add('''boVariableRequire 'BO_Version' ||''')
        self.add(' boFailed "$0" "$LINENO" $? ||')
        self.add(line(' return $?'))
        self.add(line())
        self.add(rule())
        self.add(line(": <<'DisabledContent'"))
        self.add(comment('Checkout the BriteOnyx source'))
        self.add(line())
        self.add('boDirectoryCreate "$BO_Parent" ||')
        self.add(' boFailed "$0" "$LINENO" $? ||')
        self.add(line(' return $?'))
        self.add(line())
        self.add('[[ -z "$BO_Home" ]] &&')
        self.add(line(''' export BO_Home=$(boNodeCanonical "$BO_Parent/$BO_Version")'''))
        self.add('''boVariableRequire 'BO_Home' ||''')
        self.add(' boFailed "$0" "$LINENO" $? ||')
        self.add(line(' return $?'))
        self.add(line())
        self.add('if boDirectoryExists "$BO_Home" ;')
        self.add(line(' then'))
        self.add(line('''  boLogDebug "Directory '$BO_Home' already exists, skipping Mercurial clone."'''))
        self.add('elif [[ "$BO_Version" == "predeployed" ]];')
        self.add(line(' then'))
        self.add(line('''  boLogWarn "Ignoring Mercurial clone of version '$BO_Version'"'''))
        self.add(line('else'))
        self.add(line('''  boLogInfo "Cloning version '$BO_Version' from '$BO_Url' into '$BO_Home'..."'''))
        self.add(line('  Cmd="hg clone"'))
        self.add(line('  Cmd+=" --rev $BO_Version"'))
        self.add(line('  Cmd+=" $BO_Url"'))
        self.add(line('  Cmd+=" $BO_Home"'))
        self.add(line('''  Msg="Mercurial failed to clone into directory '$BO_Home'!"'''))
        self.add('  boExecute "$Cmd" "$Msg" ||')
        self.add(' boFailed "$0" "$LINENO" $? ||')
        self.add(line(' return $?'))
        self.add(line('fi'))
        self.add(line())
        self.add('boDirectoryRequire "$BO_Home" ||')
        self.add(' boFailed "$0" "$LINENO" $? ||')
        self.add(line(' return $?'))
        self.add(line())
        self.add('if [[ "$BO_Version" == "tip" ]];')
        self.add(line(' then'))
        self.add(line("  # Update Mercurial clone of 'tip' to support development of BriteOnyx framework"))
        self.add(line('''  boLogInfo "Updating clone of version '$BO_Version' from '$BO_Url' into '$BO_Home'..."'''))
        self.add('  cd "$BO_Home" ||')
        self.add(' boFailed "$0" "$LINENO" $? ||')
        self.add(line(' return $?'))
        self.add(line('  Cmd="hg pull --update"'))
        self.add(line('''  Msg="Mercurial failed to update clone in directory '$BO_Home'!"'''))
        self.add('  boExecute "$Cmd" "$Msg" ||')
        self.add(' boFailed "$0" "$LINENO" $? ||')
        self.add(line(' return $?'))
        self.add(line('else'))
        self.add(line('''  boLogDebug "BriteOnyx version '$BO_Version' should be stable, skipping update of clone."'''))
        self.add(line('fi'))
        self.add(line('DisabledContent'))
        self.add(disabled_content_footer())


def build():
    script = Script()
    script.generate()
    return script
    

VISITOR_MAP = VisitorMap(parent_map=script_bash.VISITOR_MAP)


def render(target_directory, target_file):
    script_bash.render(build(), VISITOR_MAP, target_directory, target_file)


""" Disabled content
"""

