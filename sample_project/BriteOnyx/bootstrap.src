#!/bin/cat
[[ -n "$BO_Trace" ]] && echo "TRACE: Executing '$BASH_SOURCE'"
####################################################################################################
# NOTE: By convention, BriteOnyx is configured via environment variables prefixed by 'BO_'.

boVariableRequire 'BO_Project' || boFailed "$BASH_SOURCE" "$LINENO" $? || return $?

####################################################################################################
# Copy starter files into place as necessary

DirSrc=$BO_Project/BriteOnyx/starter
DirTgt=$BO_Project

[[ ! -f $DirTgt/.hgignore ]] && cp $DirSrc/project.hgignore $DirTgt/sample.hgignore

FileTgt=$DirTgt/declare.src
[[ ! -f $FileTgt ]] && cp $DirSrc/project-declare.src $FileTgt

FileTgt=$DirTgt/development.rst
[[ ! -f $FileTgt ]] && cp $DirSrc/project-development.rst $FileTgt

FileTgt=$DirTgt/env.src
[[ ! -f $FileTgt ]] && cp $DirSrc/project-env.src $FileTgt

FileTgt=$DirTgt/README.rst
[[ ! -f $FileTgt ]] && cp $DirSrc/project-README.rst $FileTgt

DirTgt=$BO_Project/bin/Linux
FileTgt=$DirTgt/all-fix-permissions.bash
[[ ! -f $FileTgt ]] && cp $DirSrc/project-all-fix-permissions.bash $FileTgt

DirTgt=$BO_Project/bin/Linux/helper
[[ ! -e $DirTgt ]] && mkdir -p $DirTgt
FileTgt=$DirTgt/declare-BASH.src
[[ ! -f $FileTgt ]] && cp $DirSrc/project-declare-BASH.src $FileTgt

DirTgt=$HOME
FileTgt=$DirTgt/.BriteOnyx.src
# Move previous scripts to new path
[[   -f $DirTgt/BriteOnyx-env.bash ]] && mv $DirTgt/BriteOnyx-env.bash $FileTgt
[[   -f $DirTgt/BriteOnyx-env.src  ]] && mv $DirTgt/BriteOnyx-env.src  $FileTgt
[[ ! -f $FileTgt ]] && cp $DirSrc/user-BriteOnyx.src $FileTgt

####################################################################################################
# Configure for this user

Script=$HOME/.BriteOnyx.src
boScriptRequire "$Script" || boFailed "$BASH_SOURCE" "$LINENO" $? || return $?
source          "$Script" || boFailed "$BASH_SOURCE" "$LINENO" $? || return $?

####################################################################################################
# Configure for this project

Script=$BO_Project/env.src
boScriptRequire $Script || boFailed "$BASH_SOURCE" "$LINENO" $? || return $?
source          $Script || boFailed "$BASH_SOURCE" "$LINENO" $? || return $?

####################################################################################################
# Configure for BriteOnyx

Script="$BO_Project/BriteOnyx/env.src"
boScriptRequire "$Script" || boFailed "$BASH_SOURCE" "$LINENO" $? || return $?
source          "$Script" || boFailed "$BASH_SOURCE" "$LINENO" $? || return $?

####################################################################################################
# Verify BriteOnyx bootstrap configuration

boVariableRequire 'BO_Parent'  || boFailed "$BASH_SOURCE" "$LINENO" $? || return $?
boVariableRequire 'BO_Url'     || boFailed "$BASH_SOURCE" "$LINENO" $? || return $?
boVariableRequire 'BO_Version' || boFailed "$BASH_SOURCE" "$LINENO" $? || return $?

####################################################################################################
: <<'DisabledContent'
# Checkout the BriteOnyx source

boDirectoryCreate "$BO_Parent" || boFailed "$BASH_SOURCE" "$LINENO" $? || return $?

[[ -z "$BO_Home" ]] && export BO_Home=$(boNodeCanonical "$BO_Parent/$BO_Version")
boVariableRequire 'BO_Home' || boFailed "$BASH_SOURCE" "$LINENO" $? || return $?

if boDirectoryExists "$BO_Home" ; then
  boLogDebug "Directory '$BO_Home' already exists, skipping Mercurial clone."
elif [[ "$BO_Version" == "predeployed" ]]; then
  boLogWarn "Ignoring Mercurial clone of version '$BO_Version'"
else
  boLogInfo "Cloning version '$BO_Version' from '$BO_Url' into '$BO_Home'..."
  Cmd="hg clone"
  Cmd+=" --rev $BO_Version"
  Cmd+=" $BO_Url"
  Cmd+=" $BO_Home"
  Msg="Mercurial failed to clone into directory '$BO_Home'!"
  boExecute "$Cmd" "$Msg" || boFailed "$BASH_SOURCE" "$LINENO" $? || return $?
fi

boDirectoryRequire "$BO_Home" || boFailed "$BASH_SOURCE" "$LINENO" $? || return $?

if [[ "$BO_Version" == "tip" ]]; then
  # Update Mercurial clone of 'tip' to support development of BriteOnyx framework
  boLogInfo "Updating clone of version '$BO_Version' from '$BO_Url' into '$BO_Home'..."
  cd "$BO_Home" || boFailed "$BASH_SOURCE" "$LINENO" $? || return $?
  Cmd="hg pull --update"
  Msg="Mercurial failed to update clone in directory '$BO_Home'!"
  boExecute "$Cmd" "$Msg" || boFailed "$BASH_SOURCE" "$LINENO" $? || return $?
else
  boLogDebug "BriteOnyx version '$BO_Version' should be stable, skipping update of clone."
fi
DisabledContent

####################################################################################################
: <<'DisabledContent'
DisabledContent
